name: Deploy to EKS

on:
  workflow_call:
    inputs:
      ecr_repo:
        required: true
        type: string
      eks_cluster_name:
        required: true
        type: string
      deployment_mode:
        required: false
        type: string
        default: 'singlefile'  # Options: singlefile, filenames, recursive
      deployment_file:
        required: false
        type: string
        default: './deployment.template.yaml'
      deployment_files:
        required: false
        type: string
        default: ''
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo B (this repo)
        uses: actions/checkout@v4
        with:
          repository: AmanjotSinghSaini-int/ci-templates
          ref: improvement

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --name ${{ inputs.eks_cluster_name }} \
            --region ${{ secrets.AWS_REGION }}

      - name: Get latest ECR image tag
        id: get-tag
        run: |
          IMAGE_TAG=$(aws ecr describe-images \
            --repository-name $(basename ${{ inputs.ecr_repo }}) \
            --region ${{ secrets.AWS_REGION }} \
            --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' \
            --output text)
          echo "Latest ECR tag: $IMAGE_TAG"
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Substitute image tag in deployment.template.yaml (only for singlefile mode)
        if: ${{ inputs.deployment_mode == 'singlefile' }}
        run: |
          IMAGE="${{ inputs.ecr_repo }}:${{ steps.get-tag.outputs.image_tag }}"
          sed "s|{{IMAGE}}|$IMAGE|g" ${{ inputs.deployment_file }} > final-deployment.yaml
          cat final-deployment.yaml

      - name: Deploy to EKS
        run: |
          echo "Deployment mode: ${{ inputs.deployment_mode }}"

          if [ "${{ inputs.deployment_mode }}" = "singlefile" ]; then
            echo "Applying single file: final-deployment.yaml"
            kubectl apply -f final-deployment.yaml

          elif [ "${{ inputs.deployment_mode }}" = "filenames" ]; then
            IFS=',' read -ra FILES <<< "${{ inputs.deployment_files }}"
            for file in "${FILES[@]}"; do
              echo "Applying file: $file"
              kubectl apply -f "$file"
            done

          elif [ "${{ inputs.deployment_mode }}" = "recursive" ]; then
            echo "Applying all YAML files recursively from repo root..."
            kubectl apply -R -f .

          else
            echo "Invalid deployment_mode: ${{ inputs.deployment_mode }}"
            exit 1
          fi
